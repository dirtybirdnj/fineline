// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: enauC2JUZgx5ZyyeLXbdDM
// Component: oGLkckA1izFzxr
import * as React from "react";
import Head from "next/head";
import Link from "next/link";
import * as p from "@plasmicapp/react-web";
import {
  hasVariant,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import { ProductBox } from "@plasmicpkgs/commerce"; // plasmic-import: 1gYJf_XBZUAD/codeComponent
import PaheHeaderMenuTextDark from "../../PaheHeaderMenuTextDark"; // plasmic-import: oidbDHS-cDyW9A/component
import { CategoryCollection } from "@plasmicpkgs/commerce"; // plasmic-import: ny07p45F84c_/codeComponent
import { CategoryField } from "@plasmicpkgs/commerce"; // plasmic-import: hzqiq--xdG5T/codeComponent
import { ProductMedia } from "@plasmicpkgs/commerce"; // plasmic-import: qpULM0wwWW/codeComponent
import { ProductTextField } from "@plasmicpkgs/commerce"; // plasmic-import: S1F4q0wN6b/codeComponent
import { ProductPriceComponent } from "@plasmicpkgs/commerce"; // plasmic-import: _PaJxGc8gf/codeComponent
import { ProductVariantPicker } from "@plasmicpkgs/commerce"; // plasmic-import: i3vHZr7erKX/codeComponent
import { ProductQuantity } from "@plasmicpkgs/commerce"; // plasmic-import: CjfQQrwiHjD/codeComponent
import Select from "../../Select"; // plasmic-import: OWvt5HQc2rGxSE/component
import Select__Option from "../../Select__Option"; // plasmic-import: o2kqYWuWYIGqbv/component
import Button from "../../Button"; // plasmic-import: O2ZVKHEd6XJZd/component
import { AddToCartButton } from "@plasmicpkgs/commerce"; // plasmic-import: NR7KYUJmEqx/codeComponent
import { CartComponent } from "@plasmicpkgs/commerce"; // plasmic-import: UGhhaf1AiUhF/codeComponent
import { ProductCollection } from "@plasmicpkgs/commerce"; // plasmic-import: vU2jzVAnFP/codeComponent
import ProductMain from "../../ProductMain"; // plasmic-import: ngYacomT_5P__7/component
import ShopingSection from "../../ShopingSection"; // plasmic-import: 5sSXh73L87u3W4/component
import Instagram from "../../Instagram"; // plasmic-import: 3mn9yXM9haJqFt/component
import Footer from "../../Footer"; // plasmic-import: eKObOqjQGvOV6B/component
import { useUnnamedGlobalGroupOfVariants } from "./PlasmicGlobalVariant__UnnamedGlobalGroupOfVariants"; // plasmic-import: Bhrb4fDzkR-Jm1/globalVariant
import { useScreenVariants as useScreenVariantsllkaOhQ1Bc8EW } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: LLKAOh_Q1bc8eW/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css";
import projectcss from "./plasmic_fine_line_charters.module.css"; // plasmic-import: enauC2JUZgx5ZyyeLXbdDM/projectcss
import sty from "./PlasmicItem.module.css"; // plasmic-import: oGLkckA1izFzxr/css
import LikeIcon from "./icons/PlasmicIcon__Like"; // plasmic-import: YENE9ftm8coxJW/icon
import FullStarIcon from "./icons/PlasmicIcon__FullStar"; // plasmic-import: vT_2hCCN7W4RC3/icon
import HalfStarIcon from "./icons/PlasmicIcon__HalfStar"; // plasmic-import: G6PjFLKfMhDDhd/icon
import EmptyStarIcon from "./icons/PlasmicIcon__EmptyStar"; // plasmic-import: JWz7XDsBEMngMw/icon

export const PlasmicItem__VariantProps = new Array();

export const PlasmicItem__ArgProps = new Array();

function PlasmicItem__RenderFunc(props) {
  const { variants, args, overrides, forNode } = props;
  const $props = props.args;
  const globalVariants = ensureGlobalVariants({
    unnamedGlobalGroupOfVariants: useUnnamedGlobalGroupOfVariants(),
    screen: useScreenVariantsllkaOhQ1Bc8EW()
  });

  return (
    <React.Fragment>
      <Head>
        <meta name="twitter:card" content="summary" />
        <title key="title">{"Item"}</title>
        <meta key="og:title" property="og:title" content={"Item"} />
        <meta
          key="description"
          property="og:description"
          name="description"
          content={
            "Nunc parturient ultricies condimentum parturient sagittis urna mus conubia himenaeos fermentum leo mus dignissim pulvinar blandit porta eget ad."
          }
        />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            sty.root,
            {
              [sty.rootglobal_unnamedGlobalGroupOfVariants_unnamedVariant]:
                hasVariant(
                  globalVariants,
                  "unnamedGlobalGroupOfVariants",
                  "unnamedVariant"
                )
            }
          )}
        >
          <ProductBox
            data-plasmic-name={"productBox"}
            data-plasmic-override={overrides.productBox}
            className={classNames("__wab_instance", sty.productBox)}
            id={"eternity-nitro-mens-running-shoes"}
          >
            <PaheHeaderMenuTextDark
              data-plasmic-name={"paheHeaderMenuTextDark"}
              data-plasmic-override={overrides.paheHeaderMenuTextDark}
              className={classNames(
                "__wab_instance",
                sty.paheHeaderMenuTextDark,
                {
                  [sty.paheHeaderMenuTextDarkglobal_unnamedGlobalGroupOfVariants_unnamedVariant]:
                    hasVariant(
                      globalVariants,
                      "unnamedGlobalGroupOfVariants",
                      "unnamedVariant"
                    )
                }
              )}
            />

            <section className={classNames(projectcss.all, sty.section__sWmMm)}>
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.columns__ekiAc)}
              >
                <div className={classNames(projectcss.all, sty.column__qmewn)}>
                  <div
                    className={classNames(projectcss.all, sty.columns__gjSuK)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.column__kv97)}
                    >
                      <h4
                        className={classNames(
                          projectcss.all,
                          projectcss.h4,
                          projectcss.__wab_text,
                          sty.h4__ehePp,
                          {
                            [sty.h4global_unnamedGlobalGroupOfVariants_unnamedVariant__ehePPdQpqa]:
                              hasVariant(
                                globalVariants,
                                "unnamedGlobalGroupOfVariants",
                                "unnamedVariant"
                              )
                          }
                        )}
                      >
                        {"Products"}
                      </h4>

                      {true ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__lamPd
                          )}
                        >
                          {true ? (
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__xPeKl
                              )}
                            >
                              {true ? (
                                <p.Stack
                                  as={"div"}
                                  hasGap={true}
                                  className={classNames(
                                    projectcss.all,
                                    sty.freeBox__bXqaL
                                  )}
                                >
                                  <CategoryCollection
                                    data-plasmic-name={"categoryCollection"}
                                    data-plasmic-override={
                                      overrides.categoryCollection
                                    }
                                    className={classNames(
                                      "__wab_instance",
                                      sty.categoryCollection
                                    )}
                                    emptyMessage={
                                      <div
                                        className={classNames(
                                          projectcss.all,
                                          projectcss.__wab_text,
                                          sty.text__nxGm
                                        )}
                                      >
                                        {"No collection found!"}
                                      </div>
                                    }
                                    loadingMessage={
                                      <div
                                        className={classNames(
                                          projectcss.all,
                                          projectcss.__wab_text,
                                          sty.text__fwBad
                                        )}
                                      >
                                        {"Loading..."}
                                      </div>
                                    }
                                    noLayout={false}
                                  >
                                    {true ? (
                                      <h4
                                        className={classNames(
                                          projectcss.all,
                                          projectcss.h4,
                                          sty.h4__nmk4P
                                        )}
                                      >
                                        <CategoryField
                                          data-plasmic-name={"categoryField"}
                                          data-plasmic-override={
                                            overrides.categoryField
                                          }
                                          className={classNames(
                                            "__wab_instance",
                                            sty.categoryField
                                          )}
                                          field={"name"}
                                        />
                                      </h4>
                                    ) : null}
                                  </CategoryCollection>
                                </p.Stack>
                              ) : null}
                            </div>
                          ) : null}
                        </div>
                      ) : null}
                    </div>

                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.column__myIe6)}
                    >
                      <ProductMedia
                        className={classNames(
                          "__wab_instance",
                          sty.productMedia__hqzuy
                        )}
                        mediaSize={"cover"}
                      />

                      <ProductMedia
                        className={classNames(
                          "__wab_instance",
                          sty.productMedia__zWtEm
                        )}
                        mediaIndex={1}
                        mediaSize={"cover"}
                      />

                      <ProductMedia
                        className={classNames(
                          "__wab_instance",
                          sty.productMedia__xWKu
                        )}
                        mediaIndex={2}
                        mediaSize={"cover"}
                      />
                    </p.Stack>
                  </div>
                </div>

                <div className={classNames(projectcss.all, sty.column__ls9Ho)}>
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__ntRFc)}
                  >
                    <ProductMedia
                      className={classNames(
                        "__wab_instance",
                        sty.productMedia__lNkXp
                      )}
                      mediaSize={"cover"}
                    />

                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__aTvh8)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox___8HXxs
                        )}
                      >
                        <ProductMedia
                          className={classNames(
                            "__wab_instance",
                            sty.productMedia__wOlut
                          )}
                          mediaIndex={1}
                          mediaSize={"cover"}
                        />
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox___3BhKg
                        )}
                      >
                        <ProductMedia
                          className={classNames(
                            "__wab_instance",
                            sty.productMedia__tvsZl
                          )}
                          mediaIndex={2}
                          mediaSize={"cover"}
                        />
                      </div>
                    </p.Stack>
                  </p.Stack>
                </div>

                <div
                  className={classNames(projectcss.all, sty.column__jyYz, {
                    [sty.columnglobal_unnamedGlobalGroupOfVariants_unnamedVariant__jyYzdQpqa]:
                      hasVariant(
                        globalVariants,
                        "unnamedGlobalGroupOfVariants",
                        "unnamedVariant"
                      )
                  })}
                >
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__xVddL, {
                      [sty.freeBoxglobal_unnamedGlobalGroupOfVariants_unnamedVariant__xVddLdQpqa]:
                        hasVariant(
                          globalVariants,
                          "unnamedGlobalGroupOfVariants",
                          "unnamedVariant"
                        )
                    })}
                  >
                    <h2
                      data-plasmic-name={"h2"}
                      data-plasmic-override={overrides.h2}
                      className={classNames(
                        projectcss.all,
                        projectcss.h2,
                        sty.h2
                      )}
                    >
                      <ProductTextField
                        className={classNames(
                          "__wab_instance",
                          sty.productTextField__tlRl
                        )}
                        field={"name"}
                      />
                    </h2>

                    {true ? (
                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox___1KpqA
                        )}
                      >
                        <h5
                          data-plasmic-name={"h5"}
                          data-plasmic-override={overrides.h5}
                          className={classNames(
                            projectcss.all,
                            projectcss.h5,
                            sty.h5
                          )}
                        >
                          <ProductPriceComponent
                            data-plasmic-name={"productPrice"}
                            data-plasmic-override={overrides.productPrice}
                            className={classNames(
                              "__wab_instance",
                              sty.productPrice
                            )}
                          />
                        </h5>
                      </p.Stack>
                    ) : null}

                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__zcb1X)}
                    >
                      <ProductTextField
                        className={classNames(
                          "__wab_instance",
                          sty.productTextField__rvydK
                        )}
                        field={"description"}
                      />
                    </p.Stack>

                    <ProductVariantPicker
                      data-plasmic-name={"productVariantPicker"}
                      data-plasmic-override={overrides.productVariantPicker}
                      className={classNames(
                        "__wab_instance",
                        sty.productVariantPicker
                      )}
                    />

                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__zPlJm)}
                    >
                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__a0L1I
                        )}
                      >
                        <h3
                          className={classNames(
                            projectcss.all,
                            projectcss.h3,
                            projectcss.__wab_text,
                            sty.h3__zgqUg
                          )}
                        >
                          {"Quantity"}
                        </h3>

                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox___4V84X
                          )}
                        >
                          <ProductQuantity
                            data-plasmic-name={"productQuantity"}
                            data-plasmic-override={overrides.productQuantity}
                            className={classNames(
                              "__wab_instance",
                              sty.productQuantity
                            )}
                          >
                            <Select
                              data-plasmic-name={"quantity"}
                              data-plasmic-override={overrides.quantity}
                              defaultValue={"1"}
                              name={""}
                              selectedContent2={""}
                            >
                              <Select__Option
                                className={classNames(
                                  "__wab_instance",
                                  sty.option__hvo0K
                                )}
                                value={"1"}
                              >
                                {"1"}
                              </Select__Option>

                              <Select__Option
                                className={classNames(
                                  "__wab_instance",
                                  sty.option__haAgf
                                )}
                                value={"2"}
                              >
                                {"2"}
                              </Select__Option>

                              <Select__Option
                                className={classNames(
                                  "__wab_instance",
                                  sty.option__rro2L
                                )}
                                value={"3"}
                              >
                                {"3"}
                              </Select__Option>

                              <Select__Option
                                className={classNames(
                                  "__wab_instance",
                                  sty.option__f8Uu
                                )}
                                value={"4"}
                              >
                                {"4"}
                              </Select__Option>

                              <Select__Option
                                className={classNames(
                                  "__wab_instance",
                                  sty.option__oGZiB
                                )}
                                value={"5"}
                              >
                                {"5"}
                              </Select__Option>
                            </Select>
                          </ProductQuantity>

                          <Button
                            data-plasmic-name={"likeButton"}
                            data-plasmic-override={overrides.likeButton}
                            colors={"lightGrayOutline"}
                            iconOnly={true}
                            size={"large"}
                            startIcon={
                              <LikeIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__avIU
                                )}
                                role={"img"}
                              />
                            }
                          />

                          {true ? (
                            <p.Stack
                              as={"div"}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__iwJs1
                              )}
                            >
                              <AddToCartButton
                                data-plasmic-name={"addToCartButton"}
                                data-plasmic-override={
                                  overrides.addToCartButton
                                }
                                className={classNames(
                                  "__wab_instance",
                                  sty.addToCartButton
                                )}
                              >
                                <button
                                  data-plasmic-name={"button"}
                                  data-plasmic-override={overrides.button}
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.button,
                                    projectcss.__wab_text,
                                    sty.button
                                  )}
                                >
                                  {"Add to cart "}
                                </button>
                              </AddToCartButton>
                            </p.Stack>
                          ) : null}
                        </p.Stack>
                      </p.Stack>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__fcRJt)}
                    >
                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__ls03N
                        )}
                      >
                        <Select
                          data-plasmic-name={"description4"}
                          data-plasmic-override={overrides.description4}
                          className={classNames(
                            "__wab_instance",
                            sty.description4,
                            {
                              [sty.description4global_unnamedGlobalGroupOfVariants_unnamedVariant]:
                                hasVariant(
                                  globalVariants,
                                  "unnamedGlobalGroupOfVariants",
                                  "unnamedVariant"
                                )
                            }
                          )}
                          defaultValue={""}
                          name={""}
                          placeholder={
                            <h6
                              className={classNames(
                                projectcss.all,
                                projectcss.h6,
                                projectcss.__wab_text,
                                sty.h6___8OQv
                              )}
                            >
                              {"Shipping and returns"}
                            </h6>
                          }
                        >
                          <Select__Option
                            className={classNames(
                              "__wab_instance",
                              sty.option__u9Lt
                            )}
                            value={"value1"}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__agu4L
                              )}
                            >
                              {"Option 1"}
                            </div>
                          </Select__Option>

                          <Select__Option
                            className={classNames(
                              "__wab_instance",
                              sty.option__fGuZs
                            )}
                            value={"value2"}
                          >
                            {"Option 2"}
                          </Select__Option>
                        </Select>

                        <Select
                          data-plasmic-name={"description3"}
                          data-plasmic-override={overrides.description3}
                          className={classNames(
                            "__wab_instance",
                            sty.description3,
                            {
                              [sty.description3global_unnamedGlobalGroupOfVariants_unnamedVariant]:
                                hasVariant(
                                  globalVariants,
                                  "unnamedGlobalGroupOfVariants",
                                  "unnamedVariant"
                                )
                            }
                          )}
                          defaultValue={""}
                          name={""}
                          placeholder={
                            <h6
                              className={classNames(
                                projectcss.all,
                                projectcss.h6,
                                projectcss.__wab_text,
                                sty.h6___6AT4U
                              )}
                            >
                              {"Details"}
                            </h6>
                          }
                        >
                          <Select__Option
                            className={classNames(
                              "__wab_instance",
                              sty.option__gv8Lk
                            )}
                            value={"value1"}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text___8E0Et
                              )}
                            >
                              {"Option 1"}
                            </div>
                          </Select__Option>

                          <Select__Option
                            className={classNames(
                              "__wab_instance",
                              sty.option___7Ux7J
                            )}
                            value={"value2"}
                          >
                            {"Option 2"}
                          </Select__Option>
                        </Select>

                        {(
                          hasVariant(
                            globalVariants,
                            "unnamedGlobalGroupOfVariants",
                            "unnamedVariant"
                          )
                            ? true
                            : false
                        ) ? (
                          <Select
                            data-plasmic-name={"description2"}
                            data-plasmic-override={overrides.description2}
                            className={classNames(
                              "__wab_instance",
                              sty.description2,
                              {
                                [sty.description2global_unnamedGlobalGroupOfVariants_unnamedVariant]:
                                  hasVariant(
                                    globalVariants,
                                    "unnamedGlobalGroupOfVariants",
                                    "unnamedVariant"
                                  )
                              }
                            )}
                            defaultValue={""}
                            name={""}
                            placeholder={"Details"}
                          >
                            <Select__Option
                              className={classNames(
                                "__wab_instance",
                                sty.option__onkMs
                              )}
                              value={"value1"}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__g1D3J
                                )}
                              >
                                {"Option 1"}
                              </div>
                            </Select__Option>

                            <Select__Option
                              className={classNames(
                                "__wab_instance",
                                sty.option___8CetG
                              )}
                              value={"value2"}
                            >
                              {"Option 2"}
                            </Select__Option>
                          </Select>
                        ) : null}
                      </p.Stack>
                    </p.Stack>
                  </p.Stack>

                  <CartComponent
                    data-plasmic-name={"cart"}
                    data-plasmic-override={overrides.cart}
                    className={classNames("__wab_instance", sty.cart)}
                    hideIfIsEmpty={false}
                  />
                </div>
              </p.Stack>
            </section>

            <p.Stack
              as={"section"}
              hasGap={true}
              className={classNames(projectcss.all, sty.section__anMrv, {
                [sty.sectionglobal_unnamedGlobalGroupOfVariants_unnamedVariant__anMrVdQpqa]:
                  hasVariant(
                    globalVariants,
                    "unnamedGlobalGroupOfVariants",
                    "unnamedVariant"
                  )
              })}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__iBftx, {
                  [sty.freeBoxglobal_unnamedGlobalGroupOfVariants_unnamedVariant__iBftXdQpqa]:
                    hasVariant(
                      globalVariants,
                      "unnamedGlobalGroupOfVariants",
                      "unnamedVariant"
                    )
                })}
              >
                <h3
                  className={classNames(
                    projectcss.all,
                    projectcss.h3,
                    projectcss.__wab_text,
                    sty.h3__bzjPm,
                    {
                      [sty.h3global_unnamedGlobalGroupOfVariants_unnamedVariant__bzjPmdQpqa]:
                        hasVariant(
                          globalVariants,
                          "unnamedGlobalGroupOfVariants",
                          "unnamedVariant"
                        )
                    }
                  )}
                >
                  {"4.3 stars from 10 reviews"}
                </h3>
              </p.Stack>

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__xrnF6)}
              >
                <div
                  className={classNames(projectcss.all, sty.columns__czXaF, {
                    [sty.columnsglobal_unnamedGlobalGroupOfVariants_unnamedVariant__czXaFdQpqa]:
                      hasVariant(
                        globalVariants,
                        "unnamedGlobalGroupOfVariants",
                        "unnamedVariant"
                      )
                  })}
                >
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.column__jPnOc, {
                      [sty.columnglobal_unnamedGlobalGroupOfVariants_unnamedVariant__jPnOcdQpqa]:
                        hasVariant(
                          globalVariants,
                          "unnamedGlobalGroupOfVariants",
                          "unnamedVariant"
                        )
                    })}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__p3DD, {
                        [sty.freeBoxglobal_unnamedGlobalGroupOfVariants_unnamedVariant__p3DDdQpqa]:
                          hasVariant(
                            globalVariants,
                            "unnamedGlobalGroupOfVariants",
                            "unnamedVariant"
                          )
                      })}
                    >
                      <FullStarIcon
                        className={classNames(projectcss.all, sty.svg__pNvnJ)}
                        role={"img"}
                      />

                      <FullStarIcon
                        className={classNames(projectcss.all, sty.svg__mvPSp)}
                        role={"img"}
                      />

                      <FullStarIcon
                        className={classNames(projectcss.all, sty.svg__aKgrc)}
                        role={"img"}
                      />

                      <FullStarIcon
                        className={classNames(projectcss.all, sty.svg__fPxra)}
                        role={"img"}
                      />

                      <FullStarIcon
                        className={classNames(projectcss.all, sty.svg__bvGgi)}
                        role={"img"}
                      />

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__sF2ZS,
                          {
                            [sty.textglobal_unnamedGlobalGroupOfVariants_unnamedVariant__sF2ZSdQpqa]:
                              hasVariant(
                                globalVariants,
                                "unnamedGlobalGroupOfVariants",
                                "unnamedVariant"
                              )
                          }
                        )}
                      >
                        {hasVariant(
                          globalVariants,
                          "unnamedGlobalGroupOfVariants",
                          "unnamedVariant"
                        )
                          ? " 5/5"
                          : "5/5"}
                      </div>
                    </div>

                    <h4
                      className={classNames(
                        projectcss.all,
                        projectcss.h4,
                        projectcss.__wab_text,
                        sty.h4__oFius,
                        {
                          [sty.h4global_unnamedGlobalGroupOfVariants_unnamedVariant__oFiusdQpqa]:
                            hasVariant(
                              globalVariants,
                              "unnamedGlobalGroupOfVariants",
                              "unnamedVariant"
                            )
                        }
                      )}
                    >
                      {"Perfect"}
                    </h4>

                    <h6
                      className={classNames(
                        projectcss.all,
                        projectcss.h6,
                        projectcss.__wab_text,
                        sty.h6__gy98J,
                        {
                          [sty.h6global_unnamedGlobalGroupOfVariants_unnamedVariant__gy98JdQpqa]:
                            hasVariant(
                              globalVariants,
                              "unnamedGlobalGroupOfVariants",
                              "unnamedVariant"
                            )
                        }
                      )}
                    >
                      {hasVariant(
                        globalVariants,
                        "unnamedGlobalGroupOfVariants",
                        "unnamedVariant"
                      )
                        ? "Great fit and feel. They elevate lounging to the next level!"
                        : "Great fit and feel. They elevate lounging to the next level!"}
                    </h6>

                    <div
                      className={classNames(
                        projectcss.all,
                        sty.freeBox__reWnx,
                        {
                          [sty.freeBoxglobal_unnamedGlobalGroupOfVariants_unnamedVariant__reWnxdQpqa]:
                            hasVariant(
                              globalVariants,
                              "unnamedGlobalGroupOfVariants",
                              "unnamedVariant"
                            )
                        }
                      )}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__zf3S,
                          {
                            [sty.textglobal_unnamedGlobalGroupOfVariants_unnamedVariant__zf3SdQpqa]:
                              hasVariant(
                                globalVariants,
                                "unnamedGlobalGroupOfVariants",
                                "unnamedVariant"
                              )
                          }
                        )}
                      >
                        {hasVariant(
                          globalVariants,
                          "unnamedGlobalGroupOfVariants",
                          "unnamedVariant"
                        )
                          ? " 5/5"
                          : "Heidi C. | December, 2019"}
                      </div>
                    </div>

                    {(
                      hasVariant(
                        globalVariants,
                        "unnamedGlobalGroupOfVariants",
                        "unnamedVariant"
                      )
                        ? true
                        : false
                    ) ? (
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__zTsQ3,
                          {
                            [sty.freeBoxglobal_unnamedGlobalGroupOfVariants_unnamedVariant__zTsQ3DQpqa]:
                              hasVariant(
                                globalVariants,
                                "unnamedGlobalGroupOfVariants",
                                "unnamedVariant"
                              )
                          }
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__aHw2M,
                            {
                              [sty.textglobal_unnamedGlobalGroupOfVariants_unnamedVariant__aHw2MdQpqa]:
                                hasVariant(
                                  globalVariants,
                                  "unnamedGlobalGroupOfVariants",
                                  "unnamedVariant"
                                )
                            }
                          )}
                        >
                          {"Heidi C. | December, 2019"}
                        </div>
                      </div>
                    ) : null}
                  </p.Stack>

                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.column__knVrc, {
                      [sty.columnglobal_unnamedGlobalGroupOfVariants_unnamedVariant__knVrcdQpqa]:
                        hasVariant(
                          globalVariants,
                          "unnamedGlobalGroupOfVariants",
                          "unnamedVariant"
                        )
                    })}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        sty.freeBox__eltE5,
                        {
                          [sty.freeBoxglobal_unnamedGlobalGroupOfVariants_unnamedVariant__eltE5DQpqa]:
                            hasVariant(
                              globalVariants,
                              "unnamedGlobalGroupOfVariants",
                              "unnamedVariant"
                            )
                        }
                      )}
                    >
                      <FullStarIcon
                        className={classNames(projectcss.all, sty.svg__liA89)}
                        role={"img"}
                      />

                      <FullStarIcon
                        className={classNames(projectcss.all, sty.svg__giG0O)}
                        role={"img"}
                      />

                      <FullStarIcon
                        className={classNames(projectcss.all, sty.svg__kUOeP)}
                        role={"img"}
                      />

                      <HalfStarIcon
                        className={classNames(projectcss.all, sty.svg___1Axwa)}
                        role={"img"}
                      />

                      <EmptyStarIcon
                        className={classNames(projectcss.all, sty.svg__sgC4J)}
                        role={"img"}
                      />

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__tePUg,
                          {
                            [sty.textglobal_unnamedGlobalGroupOfVariants_unnamedVariant__tePUgdQpqa]:
                              hasVariant(
                                globalVariants,
                                "unnamedGlobalGroupOfVariants",
                                "unnamedVariant"
                              )
                          }
                        )}
                      >
                        {hasVariant(
                          globalVariants,
                          "unnamedGlobalGroupOfVariants",
                          "unnamedVariant"
                        )
                          ? " 5/5"
                          : "3.5/5"}
                      </div>
                    </div>

                    <h4
                      className={classNames(
                        projectcss.all,
                        projectcss.h4,
                        projectcss.__wab_text,
                        sty.h4___5JkYd,
                        {
                          [sty.h4global_unnamedGlobalGroupOfVariants_unnamedVariant___5JkYddQpqa]:
                            hasVariant(
                              globalVariants,
                              "unnamedGlobalGroupOfVariants",
                              "unnamedVariant"
                            )
                        }
                      )}
                    >
                      {"So comfortable!"}
                    </h4>

                    <h6
                      className={classNames(
                        projectcss.all,
                        projectcss.h6,
                        projectcss.__wab_text,
                        sty.h6__me6Og,
                        {
                          [sty.h6global_unnamedGlobalGroupOfVariants_unnamedVariant__me6OgdQpqa]:
                            hasVariant(
                              globalVariants,
                              "unnamedGlobalGroupOfVariants",
                              "unnamedVariant"
                            )
                        }
                      )}
                    >
                      {hasVariant(
                        globalVariants,
                        "unnamedGlobalGroupOfVariants",
                        "unnamedVariant"
                      )
                        ? "Great fit and feel. They elevate lounging to the next level!"
                        : "I sized up just in case and kind of wished I hadn’t. Very comfortable and I live in them exclusively during the weekend."}
                    </h6>

                    <div
                      className={classNames(
                        projectcss.all,
                        sty.freeBox__qRRvh,
                        {
                          [sty.freeBoxglobal_unnamedGlobalGroupOfVariants_unnamedVariant__qRRvhdQpqa]:
                            hasVariant(
                              globalVariants,
                              "unnamedGlobalGroupOfVariants",
                              "unnamedVariant"
                            )
                        }
                      )}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__kyF2F,
                          {
                            [sty.textglobal_unnamedGlobalGroupOfVariants_unnamedVariant__kyF2FdQpqa]:
                              hasVariant(
                                globalVariants,
                                "unnamedGlobalGroupOfVariants",
                                "unnamedVariant"
                              )
                          }
                        )}
                      >
                        {hasVariant(
                          globalVariants,
                          "unnamedGlobalGroupOfVariants",
                          "unnamedVariant"
                        )
                          ? " 5/5"
                          : "Heidi C. | December, 2019"}
                      </div>
                    </div>

                    {(
                      hasVariant(
                        globalVariants,
                        "unnamedGlobalGroupOfVariants",
                        "unnamedVariant"
                      )
                        ? true
                        : false
                    ) ? (
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox___7HDnA,
                          {
                            [sty.freeBoxglobal_unnamedGlobalGroupOfVariants_unnamedVariant___7HDnAdQpqa]:
                              hasVariant(
                                globalVariants,
                                "unnamedGlobalGroupOfVariants",
                                "unnamedVariant"
                              )
                          }
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__j7YlY,
                            {
                              [sty.textglobal_unnamedGlobalGroupOfVariants_unnamedVariant__j7YlYdQpqa]:
                                hasVariant(
                                  globalVariants,
                                  "unnamedGlobalGroupOfVariants",
                                  "unnamedVariant"
                                )
                            }
                          )}
                        >
                          {"Heidi C. | December, 2019"}
                        </div>
                      </div>
                    ) : null}
                  </p.Stack>

                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.column__ymVkz, {
                      [sty.columnglobal_unnamedGlobalGroupOfVariants_unnamedVariant__ymVkZdQpqa]:
                        hasVariant(
                          globalVariants,
                          "unnamedGlobalGroupOfVariants",
                          "unnamedVariant"
                        )
                    })}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__qrN9, {
                        [sty.freeBoxglobal_unnamedGlobalGroupOfVariants_unnamedVariant__qrN9DQpqa]:
                          hasVariant(
                            globalVariants,
                            "unnamedGlobalGroupOfVariants",
                            "unnamedVariant"
                          )
                      })}
                    >
                      <FullStarIcon
                        className={classNames(projectcss.all, sty.svg__f8672)}
                        role={"img"}
                      />

                      <FullStarIcon
                        className={classNames(projectcss.all, sty.svg__tGc4Q)}
                        role={"img"}
                      />

                      <FullStarIcon
                        className={classNames(projectcss.all, sty.svg___3FLqp)}
                        role={"img"}
                      />

                      <FullStarIcon
                        className={classNames(projectcss.all, sty.svg__zoqcC)}
                        role={"img"}
                      />

                      <EmptyStarIcon
                        className={classNames(projectcss.all, sty.svg__gVbiv)}
                        role={"img"}
                      />

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__x0Sai,
                          {
                            [sty.textglobal_unnamedGlobalGroupOfVariants_unnamedVariant__x0SaidQpqa]:
                              hasVariant(
                                globalVariants,
                                "unnamedGlobalGroupOfVariants",
                                "unnamedVariant"
                              )
                          }
                        )}
                      >
                        {hasVariant(
                          globalVariants,
                          "unnamedGlobalGroupOfVariants",
                          "unnamedVariant"
                        )
                          ? " 5/5"
                          : "4/5"}
                      </div>
                    </div>

                    <h4
                      className={classNames(
                        projectcss.all,
                        projectcss.h4,
                        projectcss.__wab_text,
                        sty.h4__tidS1,
                        {
                          [sty.h4global_unnamedGlobalGroupOfVariants_unnamedVariant__tidS1DQpqa]:
                            hasVariant(
                              globalVariants,
                              "unnamedGlobalGroupOfVariants",
                              "unnamedVariant"
                            )
                        }
                      )}
                    >
                      {"Comfy but thin"}
                    </h4>

                    <h6
                      className={classNames(
                        projectcss.all,
                        projectcss.h6,
                        projectcss.__wab_text,
                        sty.h6___4Yxcn,
                        {
                          [sty.h6global_unnamedGlobalGroupOfVariants_unnamedVariant___4YxcndQpqa]:
                            hasVariant(
                              globalVariants,
                              "unnamedGlobalGroupOfVariants",
                              "unnamedVariant"
                            )
                        }
                      )}
                    >
                      {hasVariant(
                        globalVariants,
                        "unnamedGlobalGroupOfVariants",
                        "unnamedVariant"
                      )
                        ? "Great fit and feel. They elevate lounging to the next level!"
                        : "Comfortable but kinda thin for a pant. I typically wear a 32/33 pant and had to size up to XL for these to not fit like a legging. Have been wearing pretty solid for a month of so and there's some pilling, but not a lot. Good price for OK product."}
                    </h6>

                    <div
                      className={classNames(
                        projectcss.all,
                        sty.freeBox__uiFLe,
                        {
                          [sty.freeBoxglobal_unnamedGlobalGroupOfVariants_unnamedVariant__uiFLedQpqa]:
                            hasVariant(
                              globalVariants,
                              "unnamedGlobalGroupOfVariants",
                              "unnamedVariant"
                            )
                        }
                      )}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__j4PRp,
                          {
                            [sty.textglobal_unnamedGlobalGroupOfVariants_unnamedVariant__j4PRPdQpqa]:
                              hasVariant(
                                globalVariants,
                                "unnamedGlobalGroupOfVariants",
                                "unnamedVariant"
                              )
                          }
                        )}
                      >
                        {hasVariant(
                          globalVariants,
                          "unnamedGlobalGroupOfVariants",
                          "unnamedVariant"
                        )
                          ? " 5/5"
                          : "Heidi C. | December, 2019"}
                      </div>
                    </div>

                    {(
                      hasVariant(
                        globalVariants,
                        "unnamedGlobalGroupOfVariants",
                        "unnamedVariant"
                      )
                        ? true
                        : false
                    ) ? (
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__etDWq,
                          {
                            [sty.freeBoxglobal_unnamedGlobalGroupOfVariants_unnamedVariant__etDWqdQpqa]:
                              hasVariant(
                                globalVariants,
                                "unnamedGlobalGroupOfVariants",
                                "unnamedVariant"
                              )
                          }
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__eFch6,
                            {
                              [sty.textglobal_unnamedGlobalGroupOfVariants_unnamedVariant__eFch6DQpqa]:
                                hasVariant(
                                  globalVariants,
                                  "unnamedGlobalGroupOfVariants",
                                  "unnamedVariant"
                                )
                            }
                          )}
                        >
                          {"Heidi C. | December, 2019"}
                        </div>
                      </div>
                    ) : null}
                  </p.Stack>

                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.column__qoU16, {
                      [sty.columnglobal_unnamedGlobalGroupOfVariants_unnamedVariant__qoU16DQpqa]:
                        hasVariant(
                          globalVariants,
                          "unnamedGlobalGroupOfVariants",
                          "unnamedVariant"
                        )
                    })}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        sty.freeBox___6Nldh,
                        {
                          [sty.freeBoxglobal_unnamedGlobalGroupOfVariants_unnamedVariant___6NldHdQpqa]:
                            hasVariant(
                              globalVariants,
                              "unnamedGlobalGroupOfVariants",
                              "unnamedVariant"
                            )
                        }
                      )}
                    >
                      <FullStarIcon
                        className={classNames(projectcss.all, sty.svg__x3Zol)}
                        role={"img"}
                      />

                      <FullStarIcon
                        className={classNames(projectcss.all, sty.svg___8K67)}
                        role={"img"}
                      />

                      <FullStarIcon
                        className={classNames(projectcss.all, sty.svg__qHsz2)}
                        role={"img"}
                      />

                      <FullStarIcon
                        className={classNames(projectcss.all, sty.svg___9FEhJ)}
                        role={"img"}
                      />

                      <FullStarIcon
                        className={classNames(projectcss.all, sty.svg__jkPnv)}
                        role={"img"}
                      />

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__ncaaz,
                          {
                            [sty.textglobal_unnamedGlobalGroupOfVariants_unnamedVariant__ncaazdQpqa]:
                              hasVariant(
                                globalVariants,
                                "unnamedGlobalGroupOfVariants",
                                "unnamedVariant"
                              )
                          }
                        )}
                      >
                        {hasVariant(
                          globalVariants,
                          "unnamedGlobalGroupOfVariants",
                          "unnamedVariant"
                        )
                          ? " 5/5"
                          : "5/5"}
                      </div>
                    </div>

                    <h4
                      className={classNames(
                        projectcss.all,
                        projectcss.h4,
                        projectcss.__wab_text,
                        sty.h4__otOp7,
                        {
                          [sty.h4global_unnamedGlobalGroupOfVariants_unnamedVariant__otOp7DQpqa]:
                            hasVariant(
                              globalVariants,
                              "unnamedGlobalGroupOfVariants",
                              "unnamedVariant"
                            )
                        }
                      )}
                    >
                      {"So comfortable!"}
                    </h4>

                    <h6
                      className={classNames(
                        projectcss.all,
                        projectcss.h6,
                        projectcss.__wab_text,
                        sty.h6__fPn4R,
                        {
                          [sty.h6global_unnamedGlobalGroupOfVariants_unnamedVariant__fPn4RdQpqa]:
                            hasVariant(
                              globalVariants,
                              "unnamedGlobalGroupOfVariants",
                              "unnamedVariant"
                            )
                        }
                      )}
                    >
                      {hasVariant(
                        globalVariants,
                        "unnamedGlobalGroupOfVariants",
                        "unnamedVariant"
                      )
                        ? "Great fit and feel. They elevate lounging to the next level!"
                        : "I sized up just in case and kind of wished I hadn’t. Very comfortable and I live in them exclusively during the weekend."}
                    </h6>

                    <div
                      className={classNames(
                        projectcss.all,
                        sty.freeBox__cxV4A,
                        {
                          [sty.freeBoxglobal_unnamedGlobalGroupOfVariants_unnamedVariant__cxV4AdQpqa]:
                            hasVariant(
                              globalVariants,
                              "unnamedGlobalGroupOfVariants",
                              "unnamedVariant"
                            )
                        }
                      )}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__iZpr4,
                          {
                            [sty.textglobal_unnamedGlobalGroupOfVariants_unnamedVariant__iZpr4DQpqa]:
                              hasVariant(
                                globalVariants,
                                "unnamedGlobalGroupOfVariants",
                                "unnamedVariant"
                              )
                          }
                        )}
                      >
                        {hasVariant(
                          globalVariants,
                          "unnamedGlobalGroupOfVariants",
                          "unnamedVariant"
                        )
                          ? " 5/5"
                          : "Heidi C. | December, 2019"}
                      </div>
                    </div>

                    {(
                      hasVariant(
                        globalVariants,
                        "unnamedGlobalGroupOfVariants",
                        "unnamedVariant"
                      )
                        ? true
                        : false
                    ) ? (
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__w0SCt,
                          {
                            [sty.freeBoxglobal_unnamedGlobalGroupOfVariants_unnamedVariant__w0SCtdQpqa]:
                              hasVariant(
                                globalVariants,
                                "unnamedGlobalGroupOfVariants",
                                "unnamedVariant"
                              )
                          }
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__eYV0,
                            {
                              [sty.textglobal_unnamedGlobalGroupOfVariants_unnamedVariant__eYV0DQpqa]:
                                hasVariant(
                                  globalVariants,
                                  "unnamedGlobalGroupOfVariants",
                                  "unnamedVariant"
                                )
                            }
                          )}
                        >
                          {"Heidi C. | December, 2019"}
                        </div>
                      </div>
                    ) : null}
                  </p.Stack>
                </div>
              </p.Stack>

              {(
                hasVariant(
                  globalVariants,
                  "unnamedGlobalGroupOfVariants",
                  "unnamedVariant"
                )
                  ? true
                  : true
              ) ? (
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__c0LCu, {
                    [sty.freeBoxglobal_unnamedGlobalGroupOfVariants_unnamedVariant__c0LCUdQpqa]:
                      hasVariant(
                        globalVariants,
                        "unnamedGlobalGroupOfVariants",
                        "unnamedVariant"
                      )
                  })}
                >
                  <p.PlasmicLink
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      projectcss.__wab_text,
                      sty.link__qs52H,
                      {
                        [sty.linkglobal_unnamedGlobalGroupOfVariants_unnamedVariant__qs52HdQpqa]:
                          hasVariant(
                            globalVariants,
                            "unnamedGlobalGroupOfVariants",
                            "unnamedVariant"
                          )
                      }
                    )}
                    component={Link}
                    platform={"nextjs"}
                  >
                    {"View all reviews"}
                  </p.PlasmicLink>
                </p.Stack>
              ) : null}
              {(
                hasVariant(
                  globalVariants,
                  "unnamedGlobalGroupOfVariants",
                  "unnamedVariant"
                )
                  ? true
                  : false
              ) ? (
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__aga9, {
                    [sty.freeBoxglobal_unnamedGlobalGroupOfVariants_unnamedVariant__aga9DQpqa]:
                      hasVariant(
                        globalVariants,
                        "unnamedGlobalGroupOfVariants",
                        "unnamedVariant"
                      )
                  })}
                >
                  <p.PlasmicLink
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      projectcss.__wab_text,
                      sty.link__zvFox,
                      {
                        [sty.linkglobal_unnamedGlobalGroupOfVariants_unnamedVariant__zvFoxdQpqa]:
                          hasVariant(
                            globalVariants,
                            "unnamedGlobalGroupOfVariants",
                            "unnamedVariant"
                          )
                      }
                    )}
                    component={Link}
                    platform={"nextjs"}
                  >
                    {"View all reviews"}
                  </p.PlasmicLink>
                </p.Stack>
              ) : null}
            </p.Stack>

            <p.Stack
              as={"section"}
              hasGap={true}
              className={classNames(projectcss.all, sty.section__cWiaF)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox___3Rtp, {
                  [sty.freeBoxglobal_unnamedGlobalGroupOfVariants_unnamedVariant___3RtpdQpqa]:
                    hasVariant(
                      globalVariants,
                      "unnamedGlobalGroupOfVariants",
                      "unnamedVariant"
                    )
                })}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__tQwbX
                  )}
                >
                  {"Suggested products"}
                </div>

                <h3
                  className={classNames(
                    projectcss.all,
                    projectcss.h3,
                    projectcss.__wab_text,
                    sty.h3__arRWn
                  )}
                >
                  {"You may also like to check out these products."}
                </h3>

                <ProductCollection
                  data-plasmic-name={"productCollection"}
                  data-plasmic-override={overrides.productCollection}
                  className={classNames(
                    "__wab_instance",
                    sty.productCollection
                  )}
                  count={4}
                  emptyMessage={
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__uxJuH
                      )}
                    >
                      {"No product found!"}
                    </div>
                  }
                  loadingMessage={
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__mzEzq
                      )}
                    >
                      {"Loading..."}
                    </div>
                  }
                  sort={"latest-desc"}
                >
                  {true ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__wusls)}
                    >
                      <ProductMain
                        data-plasmic-name={"productMain"}
                        data-plasmic-override={overrides.productMain}
                        className={classNames(
                          "__wab_instance",
                          sty.productMain
                        )}
                      />
                    </div>
                  ) : null}
                </ProductCollection>
              </p.Stack>
            </p.Stack>

            <ShopingSection
              data-plasmic-name={"shopingSection"}
              data-plasmic-override={overrides.shopingSection}
              className={classNames("__wab_instance", sty.shopingSection)}
            />

            <Instagram
              data-plasmic-name={"instagram"}
              data-plasmic-override={overrides.instagram}
              className={classNames("__wab_instance", sty.instagram)}
            />

            <Footer
              data-plasmic-name={"footer"}
              data-plasmic-override={overrides.footer}
              className={classNames("__wab_instance", sty.footer, {
                [sty.footerglobal_unnamedGlobalGroupOfVariants_unnamedVariant]:
                  hasVariant(
                    globalVariants,
                    "unnamedGlobalGroupOfVariants",
                    "unnamedVariant"
                  )
              })}
            />
          </ProductBox>
        </div>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "productBox",
    "paheHeaderMenuTextDark",
    "categoryCollection",
    "categoryField",
    "h2",
    "h5",
    "productPrice",
    "productVariantPicker",
    "productQuantity",
    "quantity",
    "likeButton",
    "addToCartButton",
    "button",
    "description4",
    "description3",
    "description2",
    "cart",
    "productCollection",
    "productMain",
    "shopingSection",
    "instagram",
    "footer"
  ],

  productBox: [
    "productBox",
    "paheHeaderMenuTextDark",
    "categoryCollection",
    "categoryField",
    "h2",
    "h5",
    "productPrice",
    "productVariantPicker",
    "productQuantity",
    "quantity",
    "likeButton",
    "addToCartButton",
    "button",
    "description4",
    "description3",
    "description2",
    "cart",
    "productCollection",
    "productMain",
    "shopingSection",
    "instagram",
    "footer"
  ],

  paheHeaderMenuTextDark: ["paheHeaderMenuTextDark"],
  categoryCollection: ["categoryCollection", "categoryField"],
  categoryField: ["categoryField"],
  h2: ["h2"],
  h5: ["h5", "productPrice"],
  productPrice: ["productPrice"],
  productVariantPicker: ["productVariantPicker"],
  productQuantity: ["productQuantity", "quantity"],
  quantity: ["quantity"],
  likeButton: ["likeButton"],
  addToCartButton: ["addToCartButton", "button"],
  button: ["button"],
  description4: ["description4"],
  description3: ["description3"],
  description2: ["description2"],
  cart: ["cart"],
  productCollection: ["productCollection", "productMain"],
  productMain: ["productMain"],
  shopingSection: ["shopingSection"],
  instagram: ["instagram"],
  footer: ["footer"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicItem__ArgProps,
      internalVariantPropNames: PlasmicItem__VariantProps
    });

    return PlasmicItem__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicItem";
  } else {
    func.displayName = `PlasmicItem.${nodeName}`;
  }
  return func;
}

export const PlasmicItem = Object.assign(
  // Top-level PlasmicItem renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    productBox: makeNodeComponent("productBox"),
    paheHeaderMenuTextDark: makeNodeComponent("paheHeaderMenuTextDark"),
    categoryCollection: makeNodeComponent("categoryCollection"),
    categoryField: makeNodeComponent("categoryField"),
    h2: makeNodeComponent("h2"),
    h5: makeNodeComponent("h5"),
    productPrice: makeNodeComponent("productPrice"),
    productVariantPicker: makeNodeComponent("productVariantPicker"),
    productQuantity: makeNodeComponent("productQuantity"),
    quantity: makeNodeComponent("quantity"),
    likeButton: makeNodeComponent("likeButton"),
    addToCartButton: makeNodeComponent("addToCartButton"),
    button: makeNodeComponent("button"),
    description4: makeNodeComponent("description4"),
    description3: makeNodeComponent("description3"),
    description2: makeNodeComponent("description2"),
    cart: makeNodeComponent("cart"),
    productCollection: makeNodeComponent("productCollection"),
    productMain: makeNodeComponent("productMain"),
    shopingSection: makeNodeComponent("shopingSection"),
    instagram: makeNodeComponent("instagram"),
    footer: makeNodeComponent("footer"),
    // Metadata about props expected for PlasmicItem
    internalVariantProps: PlasmicItem__VariantProps,
    internalArgProps: PlasmicItem__ArgProps
  }
);

export default PlasmicItem;
/* prettier-ignore-end */
