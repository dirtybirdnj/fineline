// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: enauC2JUZgx5ZyyeLXbdDM
// Component: CLk38g2D_8tHW
import * as React from "react";
import Head from "next/head";
import Link from "next/link";
import * as p from "@plasmicapp/react-web";
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts
} from "@plasmicapp/react-web";
import NavBar from "../../NavBar"; // plasmic-import: IVyjr7QDv09hRO/component
import { CategoryCollection } from "@plasmicpkgs/commerce"; // plasmic-import: ny07p45F84c_/codeComponent
import Collection from "../../Collection"; // plasmic-import: gVUEUfniIrDhqE/component
import { CategoryMedia } from "@plasmicpkgs/commerce"; // plasmic-import: yOXBNIAJxzUq/codeComponent
import ShopingSection from "../../ShopingSection"; // plasmic-import: 5sSXh73L87u3W4/component
import Instagram from "../../Instagram"; // plasmic-import: 3mn9yXM9haJqFt/component
import Footer from "../../Footer"; // plasmic-import: eKObOqjQGvOV6B/component
import "@plasmicapp/react-web/lib/plasmic.css";
import projectcss from "./plasmic_fine_line_charters.module.css"; // plasmic-import: enauC2JUZgx5ZyyeLXbdDM/projectcss
import sty from "./PlasmicHomepage.module.css"; // plasmic-import: CLk38g2D_8tHW/css
import RightArrowIcon from "./icons/PlasmicIcon__RightArrow"; // plasmic-import: cV6OVkXZsVBTXg/icon

export const PlasmicHomepage__VariantProps = new Array();

export const PlasmicHomepage__ArgProps = new Array();

function PlasmicHomepage__RenderFunc(props) {
  const { variants, args, overrides, forNode } = props;
  const $props = props.args;
  return (
    <React.Fragment>
      <Head>
        <meta name="twitter:card" content="summary" />
        <title key="title">{"ShoeShop"}</title>
        <meta key="og:title" property="og:title" content={"ShoeShop"} />
        <meta
          key="description"
          property="og:description"
          name="description"
          content={
            "Ad ullamcorper eros nibh pharetra vulputate imperdiet consectetur vestibulum at ac posuere volutpat maecenas gravida dictum suscipit habitasse class scelerisque fermentum blandit mi a."
          }
        />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            sty.root
          )}
        >
          {true ? (
            <div
              data-plasmic-name={"heroSection"}
              data-plasmic-override={overrides.heroSection}
              className={classNames(projectcss.all, sty.heroSection)}
            >
              <NavBar
                data-plasmic-name={"navBar"}
                data-plasmic-override={overrides.navBar}
                className={classNames("__wab_instance", sty.navBar)}
              />

              <section
                className={classNames(projectcss.all, sty.section__krrWz)}
              >
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"container3"}
                  data-plasmic-override={overrides.container3}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.container3)}
                >
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__ntzCu)}
                  >
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__geH2)}
                    >
                      <h1
                        data-plasmic-name={"h1"}
                        data-plasmic-override={overrides.h1}
                        className={classNames(
                          projectcss.all,
                          projectcss.h1,
                          projectcss.__wab_text,
                          sty.h1
                        )}
                      >
                        {"Lake Champlain Fishing Adventures"}
                      </h1>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__x3JxX
                        )}
                      >
                        {
                          "From Bowfishing to Trolling, Fine Line Fishing Adventures offers access Vermont's world class fishery"
                        }
                      </div>

                      {true ? (
                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__xXoPd
                          )}
                        >
                          <button
                            className={classNames(
                              projectcss.all,
                              projectcss.button,
                              projectcss.__wab_text,
                              sty.button__s3Ztt
                            )}
                          >
                            {"make a reserveation today"}
                          </button>

                          <button
                            className={classNames(
                              projectcss.all,
                              projectcss.button,
                              projectcss.__wab_text,
                              sty.button__tO93X
                            )}
                          >
                            {"LEARN MORE"}
                          </button>
                        </p.Stack>
                      ) : null}
                    </p.Stack>
                  </p.Stack>
                </p.Stack>
              </section>
            </div>
          ) : null}

          <section className={classNames(projectcss.all, sty.section__tsf5P)}>
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__pX4Mx)}
            >
              <h3
                className={classNames(
                  projectcss.all,
                  projectcss.h3,
                  projectcss.__wab_text,
                  sty.h3__hSp2R
                )}
              >
                {
                  "TEN YEARS OF EXPERIENCE BOWHUNTING, FISHING, AND GUIDING ON LAKE CHAMPLAIN AND THE LAKES OF VERMONT"
                }
              </h3>

              {true ? (
                <p.Stack
                  as={p.PlasmicLink}
                  data-plasmic-name={"link"}
                  data-plasmic-override={overrides.link}
                  hasGap={true}
                  className={classNames(projectcss.all, projectcss.a, sty.link)}
                  component={Link}
                  href={"/aboutus"}
                  platform={"nextjs"}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__crPzR
                    )}
                  >
                    {"Find out more"}
                  </div>

                  <RightArrowIcon
                    data-plasmic-name={"svg"}
                    data-plasmic-override={overrides.svg}
                    className={classNames(projectcss.all, sty.svg)}
                    role={"img"}
                  />
                </p.Stack>
              ) : null}
            </p.Stack>
          </section>

          <p.Stack
            as={"section"}
            hasGap={true}
            className={classNames(projectcss.all, sty.section__ygnIe)}
          >
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__tOdhR)}
            >
              <h2
                data-plasmic-name={"h2"}
                data-plasmic-override={overrides.h2}
                className={classNames(
                  projectcss.all,
                  projectcss.h2,
                  projectcss.__wab_text,
                  sty.h2
                )}
              >
                {"TRIPS"}
              </h2>
            </p.Stack>

            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__b0TO0)}
            >
              <p.Stack
                as={"div"}
                data-plasmic-name={"columns"}
                data-plasmic-override={overrides.columns}
                hasGap={true}
                className={classNames(projectcss.all, sty.columns)}
              >
                <div className={classNames(projectcss.all, sty.column__wdPxq)}>
                  <CategoryCollection
                    category={"6267de7030e3370018d347ab"}
                    className={classNames(
                      "__wab_instance",
                      sty.categoryCollection__eP5B4
                    )}
                    emptyMessage={
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__bJiWy
                        )}
                      >
                        {"No collection found!"}
                      </div>
                    }
                    loadingMessage={
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__lBVvX
                        )}
                      >
                        {"Loading..."}
                      </div>
                    }
                  >
                    <Collection
                      className={classNames(
                        "__wab_instance",
                        sty.collection__p4TbL
                      )}
                      slot={
                        <h3
                          className={classNames(
                            projectcss.all,
                            projectcss.h3,
                            projectcss.__wab_text,
                            sty.h3__yjPpt
                          )}
                        >
                          {"NIGHT BOW HUNTING"}
                        </h3>
                      }
                    >
                      <CategoryMedia
                        className={classNames(
                          "__wab_instance",
                          sty.categoryMedia__aHmMh
                        )}
                        mediaSize={"cover"}
                      />
                    </Collection>
                  </CategoryCollection>
                </div>

                <div className={classNames(projectcss.all, sty.column__qwuNt)}>
                  <CategoryCollection
                    category={"6267e0ec4443d3001919b87b"}
                    className={classNames(
                      "__wab_instance",
                      sty.categoryCollection__hhjJm
                    )}
                    emptyMessage={
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___62RoD
                        )}
                      >
                        {"No collection found!"}
                      </div>
                    }
                    loadingMessage={
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__ccjj1
                        )}
                      >
                        {"Loading..."}
                      </div>
                    }
                  >
                    <Collection
                      className={classNames(
                        "__wab_instance",
                        sty.collection___8E8Ys
                      )}
                      slot={
                        <h3
                          className={classNames(
                            projectcss.all,
                            projectcss.h3,
                            projectcss.__wab_text,
                            sty.h3__afkd
                          )}
                        >
                          {"BOAT CASTING"}
                        </h3>
                      }
                    >
                      <CategoryMedia
                        className={classNames(
                          "__wab_instance",
                          sty.categoryMedia__dO1EH
                        )}
                        mediaSize={"cover"}
                      />
                    </Collection>
                  </CategoryCollection>
                </div>

                <div className={classNames(projectcss.all, sty.column__sgZjM)}>
                  <CategoryCollection
                    category={"6267e10630e3370018d76b94"}
                    className={classNames(
                      "__wab_instance",
                      sty.categoryCollection__o3Dnm
                    )}
                    emptyMessage={
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__xmIye
                        )}
                      >
                        {"No collection found!"}
                      </div>
                    }
                    loadingMessage={
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__fx18
                        )}
                      >
                        {"Loading..."}
                      </div>
                    }
                  >
                    <Collection
                      className={classNames(
                        "__wab_instance",
                        sty.collection__t701U
                      )}
                      slot={
                        <h3
                          className={classNames(
                            projectcss.all,
                            projectcss.h3,
                            projectcss.__wab_text,
                            sty.h3__r06Vj
                          )}
                        >
                          {"TROLLING"}
                        </h3>
                      }
                    >
                      <CategoryMedia
                        className={classNames(
                          "__wab_instance",
                          sty.categoryMedia__cus8R
                        )}
                        mediaSize={"cover"}
                      />
                    </Collection>
                  </CategoryCollection>
                </div>
              </p.Stack>
            </p.Stack>
          </p.Stack>

          <ShopingSection
            data-plasmic-name={"shopingSection"}
            data-plasmic-override={overrides.shopingSection}
            className={classNames("__wab_instance", sty.shopingSection)}
          />

          <Instagram
            data-plasmic-name={"instagram"}
            data-plasmic-override={overrides.instagram}
            className={classNames("__wab_instance", sty.instagram)}
          />

          <Footer
            data-plasmic-name={"footer"}
            data-plasmic-override={overrides.footer}
            className={classNames("__wab_instance", sty.footer)}
          />
        </div>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "heroSection",
    "navBar",
    "container3",
    "h1",
    "link",
    "svg",
    "h2",
    "columns",
    "shopingSection",
    "instagram",
    "footer"
  ],

  heroSection: ["heroSection", "navBar", "container3", "h1"],
  navBar: ["navBar"],
  container3: ["container3", "h1"],
  h1: ["h1"],
  link: ["link", "svg"],
  svg: ["svg"],
  h2: ["h2"],
  columns: ["columns"],
  shopingSection: ["shopingSection"],
  instagram: ["instagram"],
  footer: ["footer"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicHomepage__ArgProps,
      internalVariantPropNames: PlasmicHomepage__VariantProps
    });

    return PlasmicHomepage__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicHomepage";
  } else {
    func.displayName = `PlasmicHomepage.${nodeName}`;
  }
  return func;
}

export const PlasmicHomepage = Object.assign(
  // Top-level PlasmicHomepage renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    heroSection: makeNodeComponent("heroSection"),
    navBar: makeNodeComponent("navBar"),
    container3: makeNodeComponent("container3"),
    h1: makeNodeComponent("h1"),
    link: makeNodeComponent("link"),
    svg: makeNodeComponent("svg"),
    h2: makeNodeComponent("h2"),
    columns: makeNodeComponent("columns"),
    shopingSection: makeNodeComponent("shopingSection"),
    instagram: makeNodeComponent("instagram"),
    footer: makeNodeComponent("footer"),
    // Metadata about props expected for PlasmicHomepage
    internalVariantProps: PlasmicHomepage__VariantProps,
    internalArgProps: PlasmicHomepage__ArgProps
  }
);

export default PlasmicHomepage;
/* prettier-ignore-end */
