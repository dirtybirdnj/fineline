// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: enauC2JUZgx5ZyyeLXbdDM
// Component: 3mn9yXM9haJqFt
import * as React from "react";
import Link from "next/link";
import * as p from "@plasmicapp/react-web";
import {
  hasVariant,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import { useScreenVariants as useScreenVariantsllkaOhQ1Bc8EW } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: LLKAOh_Q1bc8eW/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css";
import projectcss from "./plasmic_fine_line_charters.module.css"; // plasmic-import: enauC2JUZgx5ZyyeLXbdDM/projectcss
import sty from "./PlasmicInstagram.module.css"; // plasmic-import: 3mn9yXM9haJqFt/css
import RightArrowIcon from "./icons/PlasmicIcon__RightArrow"; // plasmic-import: cV6OVkXZsVBTXg/icon

export const PlasmicInstagram__VariantProps = new Array();

export const PlasmicInstagram__ArgProps = new Array();

function PlasmicInstagram__RenderFunc(props) {
  const { variants, args, overrides, forNode } = props;
  const $props = props.args;
  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsllkaOhQ1Bc8EW()
  });

  return (
    <p.Stack
      as={"section"}
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      hasGap={true}
      className={classNames(
        projectcss.all,
        projectcss.root_reset,
        projectcss.plasmic_default_styles,
        projectcss.plasmic_mixins,
        projectcss.plasmic_tokens,
        sty.root
      )}
    >
      <p.Stack
        as={"div"}
        hasGap={true}
        className={classNames(projectcss.all, sty.freeBox__e5DJ)}
      >
        <p.Stack
          as={"div"}
          hasGap={true}
          className={classNames(projectcss.all, sty.freeBox__neisO)}
        >
          <h3
            data-plasmic-name={"h3"}
            data-plasmic-override={overrides.h3}
            className={classNames(
              projectcss.all,
              projectcss.h3,
              projectcss.__wab_text,
              sty.h3
            )}
          >
            {"Follow us on Instagram for \nmore updates"}
          </h3>

          {true ? (
            <p.Stack
              as={p.PlasmicLink}
              data-plasmic-name={"link"}
              data-plasmic-override={overrides.link}
              hasGap={true}
              className={classNames(projectcss.all, projectcss.a, sty.link)}
              component={Link}
              href={"/item"}
              platform={"nextjs"}
            >
              <div
                data-plasmic-name={"text"}
                data-plasmic-override={overrides.text}
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text
                )}
              >
                {"See more pictures"}
              </div>

              <RightArrowIcon
                data-plasmic-name={"svg"}
                data-plasmic-override={overrides.svg}
                className={classNames(projectcss.all, sty.svg)}
                role={"img"}
              />
            </p.Stack>
          ) : null}
        </p.Stack>
      </p.Stack>

      <p.Stack
        as={"div"}
        hasGap={true}
        className={classNames(projectcss.all, sty.freeBox__m68T)}
      >
        {true ? (
          <div className={classNames(projectcss.all, sty.freeBox__hiu7Q)}>
            <p.PlasmicImg
              alt={""}
              className={classNames(sty.img__gNv1G)}
              displayHeight={
                hasVariant(globalVariants, "screen", "mobileOnly")
                  ? "100%"
                  : "250px /* plasmic-token: FTlOohfQilBrk7 */"
              }
              displayMaxHeight={"none"}
              displayMaxWidth={"100%"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"100%"}
              loading={"lazy"}
              src={{
                src: "/plasmic/fine_line_charters/images/nightBowFishingjpeg.jpeg",
                fullWidth: 2048,
                fullHeight: 1536,
                aspectRatio: undefined
              }}
            />
          </div>
        ) : null}
        {true ? (
          <div className={classNames(projectcss.all, sty.freeBox__qrqdG)}>
            <p.PlasmicImg
              alt={""}
              className={classNames(sty.img__neOmc)}
              displayHeight={
                hasVariant(globalVariants, "screen", "mobileOnly")
                  ? "100%"
                  : "250px /* plasmic-token: FTlOohfQilBrk7 */"
              }
              displayMaxHeight={"none"}
              displayMaxWidth={"100%"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"100% /* plasmic-token: Bp3oHehAo336v8 */"}
              loading={"lazy"}
              src={{
                src: "/plasmic/fine_line_charters/images/iceFishingLakers2Jpeg.jpeg",
                fullWidth: 1536,
                fullHeight: 2048,
                aspectRatio: undefined
              }}
            />
          </div>
        ) : null}
        {true ? (
          <div className={classNames(projectcss.all, sty.freeBox__anDoP)}>
            <p.PlasmicImg
              alt={""}
              className={classNames(sty.img__rxkPb)}
              displayHeight={
                hasVariant(globalVariants, "screen", "mobileOnly")
                  ? "100%"
                  : "250px /* plasmic-token: FTlOohfQilBrk7 */"
              }
              displayMaxHeight={"none"}
              displayMaxWidth={"100%"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"100% /* plasmic-token: Bp3oHehAo336v8 */"}
              loading={"lazy"}
              src={{
                src: "/plasmic/fine_line_charters/images/guysLakerjpeg.jpeg",
                fullWidth: 1125,
                fullHeight: 844,
                aspectRatio: undefined
              }}
            />
          </div>
        ) : null}
        {true ? (
          <div className={classNames(projectcss.all, sty.freeBox__qsxB6)}>
            <p.PlasmicImg
              alt={""}
              className={classNames(sty.img__gfM7W)}
              displayHeight={
                hasVariant(globalVariants, "screen", "mobileOnly")
                  ? "100%"
                  : "250px /* plasmic-token: FTlOohfQilBrk7 */"
              }
              displayMaxHeight={"none"}
              displayMaxWidth={"100%"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"100% /* plasmic-token: Bp3oHehAo336v8 */"}
              loading={"lazy"}
              src={{
                src: "/plasmic/fine_line_charters/images/girlLakerjpeg.jpeg",
                fullWidth: 960,
                fullHeight: 586,
                aspectRatio: undefined
              }}
            />
          </div>
        ) : null}
        {true ? (
          <div className={classNames(projectcss.all, sty.freeBox__un5H)}>
            <p.PlasmicImg
              alt={""}
              className={classNames(sty.img___96Ul9)}
              displayHeight={
                hasVariant(globalVariants, "screen", "mobileOnly")
                  ? "100%"
                  : "250px /* plasmic-token: FTlOohfQilBrk7 */"
              }
              displayMaxHeight={"none"}
              displayMaxWidth={"100%"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={
                hasVariant(globalVariants, "screen", "mobileOnly")
                  ? "auto"
                  : "100% /* plasmic-token: Bp3oHehAo336v8 */"
              }
              loading={"lazy"}
              src={{
                src: "/plasmic/fine_line_charters/images/nightBowFishing3Jpeg.jpeg",
                fullWidth: 1536,
                fullHeight: 2048,
                aspectRatio: undefined
              }}
            />
          </div>
        ) : null}
      </p.Stack>
    </p.Stack>
  );
}

const PlasmicDescendants = {
  root: ["root", "h3", "link", "text", "svg"],
  h3: ["h3"],
  link: ["link", "text", "svg"],
  text: ["text"],
  svg: ["svg"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicInstagram__ArgProps,
      internalVariantPropNames: PlasmicInstagram__VariantProps
    });

    return PlasmicInstagram__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicInstagram";
  } else {
    func.displayName = `PlasmicInstagram.${nodeName}`;
  }
  return func;
}

export const PlasmicInstagram = Object.assign(
  // Top-level PlasmicInstagram renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    h3: makeNodeComponent("h3"),
    link: makeNodeComponent("link"),
    text: makeNodeComponent("text"),
    svg: makeNodeComponent("svg"),
    // Metadata about props expected for PlasmicInstagram
    internalVariantProps: PlasmicInstagram__VariantProps,
    internalArgProps: PlasmicInstagram__ArgProps
  }
);

export default PlasmicInstagram;
/* prettier-ignore-end */
